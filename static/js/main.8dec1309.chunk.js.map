{"version":3,"sources":["components/Wrapper/index.js","components/Nav/index.js","components/Jumbo/index.js","components/Card/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Nav","message","score","topScore","Jumbo","Card","onClick","handleClick","id","src","imageURL","alt","data-id","clickedCheck","App","state","Memes","highScore","event","currentId","target","getAttribute","setState","includes","push","newCount","arr","i","length","j","Math","floor","random","hold","this","map","memes","image","name","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"44DAOeA,MAJf,SAAiBC,GACb,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,Y,MCU5BC,MAXf,SAAaH,GACT,OACI,sBAAKC,UAAU,MAAf,UACI,2CACA,oBAAIA,UAAU,UAAd,SAAyBD,EAAMI,UAC/B,yCAAYJ,EAAMK,MAAlB,iBAAuCL,EAAMM,gB,MCG1CC,MARf,SAAeP,GACX,OACI,qBAAKC,UAAU,QAAf,SACI,gH,YCSGO,MAZf,SAAcR,GACV,OAEI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKQ,QAAST,EAAMU,YAAaC,GAAIX,EAAMW,GAAIC,IAAKZ,EAAMa,SAAUZ,UAAU,cAAca,IAAKd,EAAMc,IAAKC,UAASf,EAAMW,Y,OCA3IK,G,MAAe,IAmEJC,E,4MAhEbC,MAAQ,CACNC,MAAOA,EACPd,MAAO,EACPe,UAAW,EACXhB,QAAS,6B,EAGXM,YAAc,SAACW,GACb,IAAMC,EAAYD,EAAME,OAAOC,aAAa,WAE5C,GADA,EAAKC,SAAS,CAAErB,QAAS,eACpBY,EAAaU,SAASJ,GASzB,EAAKG,SAAS,CAAEpB,MAAO,IACvB,EAAKoB,SAAS,CAAErB,QAAS,cACzBY,EAAe,OAXsB,CACrCA,EAAaW,KAAKL,GAClB,IAAIM,EAAW,EAAKV,MAAMb,MAAQ,EAClC,EAAKoB,SAAS,CAAEpB,MAAOuB,IACvB,EAAKH,SAAS,CAAErB,QAAS,cACrBwB,EAAW,EAAKV,MAAME,WACxB,EAAKK,SAAS,CAAEL,UAAWQ,IAS/B,IADA,IAAMC,EAAM,EAAKX,MAAMC,MACdW,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIE,QACnCK,EAAOP,EAAIC,GACfD,EAAIC,GAAKD,EAAIG,GACbH,EAAIG,GAAKI,EAEX,EAAKX,SAAS,CAAEN,MAAOU,K,uDAIf,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACExB,MAAOgC,KAAKnB,MAAMb,MAClBC,SAAU+B,KAAKnB,MAAME,UACrBhB,QAASiC,KAAKnB,MAAMd,UACtB,cAAC,EAAD,IACA,qBAAKH,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,QAAf,SACGoC,KAAKnB,MAAMC,MAAMmB,KAAI,SAAAC,GAAK,OACzB,cAAC,EAAD,CAEE1B,SAAU0B,EAAMC,MAChB7B,GAAI4B,EAAM5B,GACVG,IAAKyB,EAAME,KACX/B,YAAa,EAAKA,aAJb6B,EAAM5B,oB,GAjDX+B,aCLlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8dec1309.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n    return (\n        <nav className=\"nav\">\n            <h1>Gym Memes</h1>\n            <h3 className=\"message\">{props.message}</h3>\n            <h3>Score: {props.score} | Top Score: {props.topScore}</h3>\n        </nav>\n    );\n\n}\n\nexport default Nav;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbo(props) {\n    return (\n        <div className=\"jumbo\">\n            <h2>Click on an image to earn points. If you click on an image twice, you lose!</h2>\n        </div>\n    );\n}\n\nexport default Jumbo;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n    return (\n\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <img onClick={props.handleClick} id={props.id} src={props.imageURL} className=\"image-edits\" alt={props.alt} data-id={props.id}></img>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Card;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Nav from \"./components/Nav\";\nimport Jumbo from \"./components/Jumbo\";\nimport Footer from \"./components/Footer\";\nimport Card from \"./components/Card\";\nimport Memes from \"./Memes.json\";\nimport './App.css';\n\nlet clickedCheck = [];\n\nclass App extends Component {\n  state = {\n    Memes: Memes,\n    score: 0,\n    highScore: 0,\n    message: \"Click a picture to start!\"\n  }\n\n  handleClick = (event) => {\n    const currentId = event.target.getAttribute(\"data-id\");\n    this.setState({ message: \"Let's play\" })\n    if (!clickedCheck.includes(currentId)) {\n      clickedCheck.push(currentId)\n      let newCount = this.state.score + 1;\n      this.setState({ score: newCount });\n      this.setState({ message: \"Good Job!\" })\n      if (newCount > this.state.highScore) {\n        this.setState({ highScore: newCount })\n      }\n    } else {\n      this.setState({ score: 0 });\n      this.setState({ message: \"Incorrect\" })\n      clickedCheck = [];\n    }\n\n    const arr = this.state.Memes;\n    for (let i = arr.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * arr.length);\n      let hold = arr[i];\n      arr[i] = arr[j];\n      arr[j] = hold;\n    }\n    this.setState({ Memes: arr });\n  };\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          score={this.state.score}\n          topScore={this.state.highScore}\n          message={this.state.message} />\n        <Jumbo />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              {this.state.Memes.map(memes => (\n                <Card\n                  key={memes.id}\n                  imageURL={memes.image}\n                  id={memes.id}\n                  alt={memes.name}\n                  handleClick={this.handleClick}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n\n      </Wrapper>\n    )\n\n  }\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// reportWebVitals();\n"],"sourceRoot":""}